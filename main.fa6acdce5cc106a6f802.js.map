{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["refs","days","document","querySelector","hours","mins","secs","selector","targetDate","this","getTime","start","setInterval","startTime","Date","now","deltaTime","time","getTimeComponents","updateClockface","Math","floor","textContent"],"mappings":"kHAAA,4B,mBCAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,2BAC7BC,MAAOF,SAASC,cAAc,4BAC9BE,KAAMH,SAASC,cAAc,2BAC7BG,KAAMJ,SAASC,cAAc,4BAmCjB,I,WA/BZ,cAAsC,IAAxBI,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKF,SAAWL,SAASC,cAAcI,GACvCE,KAAKD,WAAaA,EAAWE,U,2BAG/BC,MAAA,WAAQ,WACNC,aAAY,WACV,IAAMC,EAAYC,KAAKC,MACjBC,EAAY,EAAKR,WAAaK,EAC9BI,EAAO,EAAKC,kBAAkBF,GACpC,EAAKG,gBAAgBF,KACpB,M,EAGLC,kBAAA,SAAkBD,GAMhB,MAAO,CAAEhB,KALImB,KAAKC,MAAMJ,EAAO,OAKhBb,MAJDgB,KAAKC,MAAOJ,EAAO,MAAR,MAIHZ,KAHTe,KAAKC,MAAOJ,EAAO,KAAR,KAGIX,KAFfc,KAAKC,MAAOJ,EAAO,IAAe,O,EAKjDE,gBAAA,YAA6C,IAA3BlB,EAA2B,EAA3BA,KAAMG,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACnCN,EAAKC,KAAKqB,YAAcrB,EACxBD,EAAKI,MAAMkB,YAAclB,EACzBJ,EAAKK,KAAKiB,YAAcjB,EACxBL,EAAKM,KAAKgB,YAAchB,G,KAId,CAAmB,CAC/BC,SAAU,WACVC,WAAY,IAAIM,KAAK,kBAEjBH,U","file":"main.fa6acdce5cc106a6f802.js","sourcesContent":["import './styles.css';\nimport './js/timer';\n","const refs = {\r\n  days: document.querySelector('span[data-value=\"days\"]'),\r\n  hours: document.querySelector('span[data-value=\"hours\"]'),\r\n  mins: document.querySelector('span[data-value=\"mins\"]'),\r\n  secs: document.querySelector('span[data-value=\"secs\"]'),\r\n};\r\n\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = document.querySelector(selector);\r\n    this.targetDate = targetDate.getTime();\r\n  }\r\n\r\n  start() {\r\n    setInterval(() => {\r\n      const startTime = Date.now();\r\n      const deltaTime = this.targetDate - startTime;\r\n      const time = this.getTimeComponents(deltaTime);\r\n      this.updateClockface(time);\r\n    }, 1000);\r\n  }\r\n\r\n  getTimeComponents(time) {\r\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n\r\n    return { days, hours, mins, secs };\r\n  }\r\n\r\n  updateClockface({ days, hours, mins, secs }) {\r\n    refs.days.textContent = days;\r\n    refs.hours.textContent = hours;\r\n    refs.mins.textContent = mins;\r\n    refs.secs.textContent = secs;\r\n  }\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2021'),\r\n});\r\ntimer.start();\r\n"],"sourceRoot":""}